앞으로 해야 할 일 리스트
- 도서관 관리자의 유지보수를 위해 DB CUD 기능 추가
    >> 로그인 기능도 필요해짐
    >> 비밀번호 변경 기능도 필요
    >> 회원가입은 불필요함 (admin만 있으면 되거든)
- 에러 페이지 추가 (잘못된 접근)



구현된 것
- DB Read
- 책 column 위치를 짚는 이진 탐색 알고리즘 구현 (JPQL 사용)
- 디바이스 별 html 페이지 유동적 전달 (웹/모바일/태블릿)
    >> 디바이스 별 맞춤 중앙도서관 배경화면 확보
    >> bootstrap 반응형 웹으로 해결됨
- 책의 위치를 프론트 서버에 전송하는 로직 구현 (Address 클래스 내 필드를 각각 분리해서 JSON으로 전송)
    >> RESTful API 형식으로 개발.
    >> 입력 형식이 잘못되었을 경우 예외처리


개선안
- BookshelfRepository 메소드 JPQL로 재선언 (메소드 명이 너무 길어버림)



front 상에서 구현할 것
- 청구기호를 입력할 수 있는 홈페이지 구현
    >> 대충 구글처럼 생김
    >> 유저가 책 제목을 입력하여 청구기호를 get할 수 있도록 중앙도서관 링크를 올려둠
    >> 모바일 환경에서 청구기호 복사하기 까다로울텐데 어쩌지;
        -> 책 제목을 복붙하면 웹크롤링으로 자동으로 청구기호를 복사할 수 있도록 함
        -> 하지만 도서관과 컨텍하여, 실제 도서관 페이지와 연동할 수 있으면 복사 문제가 해결됨 (애초에 홈페이지 자체를 개발할 필요가 없어짐!)
        -> 그러므로 굳이 해결해야 하는 문제는 아니다.
        -> 근데 도서관 어플이 복사가 안됨; 책도 청구기호도 복사를 못함...
        -> 당장의 만족스러운 유저경험을 위해서 이 상태로는 사실상 웹크롤링이 강제되긴 함
- 사용자가 잘못된 url에 접근했을 때 예외처리
    >> 예외 페이지도 만들어야 함
