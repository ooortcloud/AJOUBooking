앞으로 해야 할 일 리스트

- DB CRUD
    >> 기본적인 기능은 Read에 치중됨
    >> C, U, D는 오직 도서관 관리자가 column number를 조절하기 위해 사용될 예정
        -> 그러므로 당장은 read 기능만 구현하면 됨
- 책 column 위치를 짚는 이진 탐색 알고리즘 구현 (JPQL 사용)
    >> 분류기호 이진탐색은 SQL에서 구현
        -> JAVA 상에서 이진탐색을 하기에는 매번 탐색할 때마다 DB를 조회해야 함...
        -> 그러므로 차라리 SQL을 통해 DB 상에서 이진 탐색을 구현하는 쪽이 트랜잭션 횟수를 크게 줄일 수 있음
    >> 저자기호 이진탐색은 JAVA 상에서 구현
        -> 저자기호는 문자열을 뜯어서 각각 탐색해야 하기 때문에 까다로움
        -> 하지만 일차적으로 분류기호 이진탐색으로 걸러내면 남은 column 수는 손에 꼽음
        -> 그러므로 DB에서 해당 분류기호에 해당하는 모든 저자기호를 리스트로 가져온 뒤, 내부 메모리에서 이진탐색 굴려서 column을 최종 select한다.
- 청구기호를 입력할 수 있는 간단한 홈페이지 구현
    >> 대충 구글처럼 생김
    >> 유저가 책 제목을 입력하여 청구기호를 get할 수 있도록 중앙도서관 링크를 올려둠
    >> 모바일 환경에서 청구기호 복사하기 까다로울텐데 어쩌지;
        -> 책 제목을 복붙하면 웹크롤링으로 자동으로 청구기호를 복사할 수 있도록 함
        -> 하지만 도서관과 컨텍하여, 실제 도서관 페이지와 연동할 수 있으면 복사 문제가 해결됨 (애초에 홈페이지 자체를 개발할 필요가 없어짐!)
        -> 그러므로 굳이 해결해야 하는 문제는 아니다.
        -> 근데 도서관 어플이 복사가 안됨; 책도 청구기호도 복사를 못함...
        -> 당장의 만족스러운 유저경험을 위해서 이 상태로는 사실상 웹크롤링이 강제되긴 함
- 책의 위치를 프론트 서버에 전송하는 로직 구현 (Address 클래스 내 필드를 각각 분리해서 JSON으로 전송)
    >> 홈페이지를 띄우는 HomeController, 데이터만 교환하는 MainController 두 컨트롤러를 각각 개발한다.
    >> 하나는 View를(MVC), 다른 하나는 JSON 데이터(RESTful API)를 보내는 것을 목표로 한다.